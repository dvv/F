<!doctype html>
<!-- paulirish.com/2008/conditional-stylesheets-vs-css-hacks-answer-neither/ -->
<!--[if lt IE 7 ]> <html lang="en" class="no-js ie6"> <![endif]-->
<!--[if IE 7 ]>    <html lang="en" class="no-js ie7"> <![endif]-->
<!--[if IE 8 ]>    <html lang="en" class="no-js ie8"> <![endif]-->
<!--[if (gte IE 9)|!(IE)]><!--> <html lang="en" class="no-js"> <!--<![endif]-->
<head>
	<meta charset="utf-8">

	<!-- Always force latest IE rendering engine (even in intranet) & Chrome Frame -->
	<meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">

	<!-- encoding must be specified within the first 512 bytes www.whatwg.org/specs/web-apps/current-work/multipage/semantics.html#charset -->

	<!-- meta element for compatibility mode needs to be before all elements except title & meta msdn.microsoft.com/en-us/library/cc288325(VS.85).aspx -->
	<!-- Chrome Frame is only invoked if meta element for compatibility mode is within the first 1K bytes code.google.com/p/chromium/issues/detail?id=23003 -->

	<title></title>
	<meta name="description" content="">
	<meta name="author" content="">

	<!--  Mobile viewport optimized: j.mp/bplateviewport -->
	<meta name="viewport" content="width=device-width, initial-scale=1.0">

	<!-- CSS: implied media="all" -->
	<link rel="stylesheet" href="css/main.css">
	<!-- 960 grid -->
	<link rel="stylesheet" href="css/960.css">
	<!-- style -->
	<link rel="stylesheet" href="css/style.css">

	<script type="text/javascript" src="js/ender.js"></script>
	<script>var context = {caps: <?= JSON.stringify(obj.context || {}) ?>, schema: <?= JSON.stringify(obj.schema || {}) ?>, user: <?= JSON.stringify(obj.user || {}) ?>};</script>
	<script type="text/javascript">
		window._ = $; _.mixin = $.ender;
		// augment IE. for how long?!
		if (typeof console == 'undefined') console = {log: alert};
		//
		$.script([
			'/socket.io/socket.io.js'
		], function() {
			console.log('JSLOADED');
			// scripts loaded
			$.script('js/app.js', function() {
				//return ready();
				console.log('APPLOADED');
				socket = new io.Socket(null, {
					port: location.port,
					secure: location.protocol === 'https:',
					//transports: ['websocket', 'flashsocket'],
					rememberTransport: false
				});
				// no transport? -> punt on this, fallback is ok
				////if (!socket.transport) return ready();
				socket.on('connect', function() {
					console.log('CONNECTED', arguments);
				});
				socket.on('disconnect', function() {
					console.log('DISCONNECTED', arguments);
				});
				window.cbs = {};
				window.context = {};
				socket.on('message', function(message) {
					//console.log('MESSAGE', arguments);
					if (!message) return;
					var fn;
					// basic JSON-RPC response
					if (message.cmd === 'rpc' && message.id) {
						if (fn = cbs[message.id]) {
							delete cbs[message.id]; // FIXME: remove only anon callbacks?
							fn.call(socket, message.error, message.result);
						}
					// setup user caps
					} else if (message.cmd === 'set context') {
						// reparse message data to honor passed functions
						// FIXME: should go to socket.io?
						window.context = JSON.parse(JSON.stringify(message.data), function(k, v) {
						if (v && typeof v === 'string' && v.substring(0, 3) === '~f~') {
								var fid = v.substring(3);
								v = function(callback/*, params...*/) {
									var id = Math.random().toString().substring(2);
									cbs[id] = callback;
									var msg = {cmd: 'rpc', id: id, method: fid, params: Array.prototype.slice.call(arguments, 1)};
									socket.send(msg);
									return id;
								};
							}
							return v;
						});
						console.log('CONTEXT', context);
					}
				});
				socket.connect();
				/*window.rpc = function(method, params, callback) {
					var message = {cmd: 'rpc', method: method, params: params};
					if (callback && typeof callback === 'function') {
						var id = Math.random().toString().substring(2);
						cbs[id] = callback;
						message.id = id;
					}
					socket.send(message);
					return id;
				};*/
			});
		});
	</script>

</head>

<body class="container_16 clearfix">

	<div id="errors" class="container_16 clearfix"></div>
	<header id="header" class="container_16 clearfix"></header>
	<nav id="nav" class="container_16 clearfix"></nav>
	<div id="content" class="container_16 clearfix"><?-body?></div>
	<footer id="footer" class="container_16 clearfix"></footer>

</body>
</html>
